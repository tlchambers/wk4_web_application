# POST /albums Route Design Recipe

_Copy this design recipe template to test-drive a Sinatra route._

## 1. Design the Route Signature

You'll need to include:
  * the HTTP method
  * the path
  * any query parameters (passed in the URL)
  * or body parameters (passed in the request body)

#1
Method: POST
Path: /albums
Body Parameters: 
title=OK Computer
release_year=1997
artist_id=1

#2
Method: POST
Path: /albums
Body Parameters: 
title=Voyage
release_year=2022
artist_id=2


## 2. Design the Response

The route might return different responses, depending on the result.

For example, a route for a specific blog post (by its ID) might return `200 OK` if the post exists, but `404 Not Found` if the post is not found in the database.

Your response might return plain text, JSON, or HTML code. 

_Replace the below with your own design. Think of all the different possible responses your route will return._

When body param:
(title="OK Computer", release_year="1997", artist_id="1")

```
(title: "OK Computer", release_year: "1997", artist_id: "1")
```


When body param:
(title="Voyage", release_year="2022", artist_id="2")

```
(title: "Voyage", release_year: "2022", artist_id: "2")
```

## 3. Write Examples

Request:
POST /albums

With body parameters:
title: "Ok Computer"
release_year: "1997"
artist_id: "1"

Request:
POST /albums

With body parameters:
title: "Voyage"
release_year: "2022"
artist_id: "2"

Response (200/OK):
No content, just create the new resource (the album)



## 4. Encode as Tests Examples

```ruby

# EXAMPLE
# file: spec/integration/application_spec.rb

require "spec_helper"

describe Application do
  include Rack::Test::Methods

  let(:app) { Application.new }

  context "POST /albums" do
    it 'should create a new album' do
      rsponse = post('/albums/', title: 'Ok Computer', release_year: '1997', artist_id: '1')

      expect(rsponse.status).to eq(200)
      expect(rsponse.body).to eq('')
    end

    it 'should create a new album' do
      rsponse = post(
        '/albums', 
        title: 'Voyage',
        release_year: '2022',
        artist_id: '2'
        )

      expect(rsponse.status).to eq(200)
      expect(rsponse.body).to eq('')

      response = get ('/albums')
      
      expect(response.body).to include('Voyage')
    end
  end
end
```

## 5. Implement the Route

Write the route and web server code to implement the route behaviour.